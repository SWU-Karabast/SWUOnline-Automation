import {
    com, p, src,
    LoadTestGameStateAsync,
    player1Window, player2Window
} from '../../utils/util';

export const ExploitCases = {
    'Exploit: Malevolence TWI and Debuff': process.env.FULL_REGRESSION !== "true" ? '' : async function () {
    await LoadTestGameStateAsync('exploit/malev-triggers');

    await browser
      .waitForElementPresent(com.MyHand)
      .moveToElement(com.GameChat, 0, 0).pause(p.Move)
      .click(com.HandCard(2))
      .moveToElement(com.GameChat, 0, 0).pause(p.Move)
      .click(com.Checkbox(1)).pause(p.CheckBox)
      .click(com.Checkbox(2)).pause(p.CheckBox)
      .click(com.Checkbox(5)).pause(p.CheckBox)
      .click(com.Checkbox(6)).pause(p.CheckBox)
      .click(com.SubmitButton).pause(p.ButtonPress)
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitForEffect)
      .click(com.PassButton).pause(p.ButtonPress)
      .click(com.TopBottomButton(1, 1)).pause(p.ButtonPress)
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitForEffect)
      .click(com.TopBottomButton(1, 2)).pause(p.ButtonPress)
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitForEffect)
      .click(com.Checkbox(3)).pause(p.CheckBox)
      .click(com.SubmitButton).pause(p.ButtonPress)
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitToChooseTarget)
      .click(com.EnemySpaceUnit(1))
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitForEffect)
    ;

    await browser.window.switchTo(player2Window).refresh()
      .waitForElementPresent(com.AllySpaceUnit(1))
    ;

    await browser.assert.textEquals(com.UnitDivPiece(com.AllySpaceUnit(1), 1), '3');
    await browser.assert.attributeEquals(com.AllySpaceUnit(1) + ' img', 'style', src.NotPlayableBorderUnit);
    ;
  },
  'Exploit: Malevolence TWI Unique': process.env.FULL_REGRESSION !== "true" ? '' : async function() {
    await LoadTestGameStateAsync('exploit/malev-unique');

    await browser
      .waitForElementPresent(com.MyHand)
      .moveToElement(com.GameChat, 0, 0).pause(p.Move)
      .click(com.HandCard(2))
      .moveToElement(com.GameChat, 0, 0).pause(p.Move)
      .click(com.Checkbox(1)).pause(500)
      .click(com.Checkbox(2)).pause(500)
      .click(com.Checkbox(3)).pause(500)
      .click(com.Checkbox(4)).pause(500)
      .click(com.SubmitButton).pause(p.ButtonPress)
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitToChooseTarget)
      .click(com.AllySpaceUnit(3))
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitForEffect)
      .click(com.PassButton).pause(p.ButtonPress)
      .click(com.EnemySpaceUnit(1))
      .pause(p.WaitForEffect)
    ;

    await browser.assert.textEquals(com.UnitDivPiece(com.EnemySpaceUnit(1), 1),'3');
    await browser.assert.elementPresent(com.AllySpaceUnit(1));
    await browser.assert.not.elementPresent(com.AllySpaceUnit(1, true));
    ;
  },
  'Exploit: Can\'t Use SLT to Pay Before': async function() {
    await LoadTestGameStateAsync('exploit/cant-use-slt-before');

    await browser.assert.attributeEquals(com.HandCard(3) + ' img', 'style', src.NotPlayableBorderHand);
  },
  'Exploit: SLT Bounty and Punishing One': process.env.FULL_REGRESSION !== "true" ? '' : async function() {
    await LoadTestGameStateAsync('exploit/slt-punishing-one');

    const player1PunishingOne = com.UniqueIdSelector(27);
    const player1Dengar = com.UniqueIdSelector(12);
    const player1SLT = com.UniqueIdSelector(45);
    const player2SLT = com.UniqueIdSelector(43);
    const player2Malevolence = com.UniqueIdSelector(32);

    await browser
      .waitForElementPresent(com.MyHand)
      .moveToElement(com.GameChat, 0, 0).pause(p.Move)
      .click(player1PunishingOne)
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitToChooseTarget)
      .click(com.Base(2))
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitForEffect)
    ;

    await browser.window.switchTo(player2Window).refresh()
      .waitForElementPresent(com.MyHand)
      .moveToElement(com.GameChat, 0, 0).pause(p.Move)
      .click(com.HandCard(2))
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitForEffect)
      .click(com.Checkbox(1)).pause(p.CheckBox)
      .click(com.Checkbox(2)).pause(p.CheckBox)
      .click(com.SubmitButton).pause(p.ButtonPress)
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitToChooseTarget)
      .click(player1Dengar)
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitToChooseTarget)
      .click(player1SLT)
      .moveToElement(com.GameChat, 0, 0).pause(p.WaitForEffect)
      .click(com.PassButton).pause(p.ButtonPress)
    ;

    await browser.window.switchTo(player1Window).refresh()
      .waitForElementPresent(com.MyHand)
      .moveToElement(com.GameChat, 0, 0).pause(p.Move)
      .click(com.YesNoButton('YES')).pause(p.ButtonPress)
    ;

    await browser.assert.elementPresent(com.EnemyGroundUnit(1));
    await browser.assert.not.elementPresent(player2Malevolence);
    await browser.assert.not.elementPresent(player2SLT);
    await browser.assert.elementPresent(player1PunishingOne);
    await browser.assert.not.elementPresent(com.UniqueIdExhausted(27));
    await browser.assert.textEquals(com.MyResources, '5/6')
    await browser.assert.textEquals(com.TheirResources, '1/7')
  },
}